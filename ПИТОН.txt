9Ğ’33

class Main:
    def __init__(self):
        self.state = 'A'


    def hurry(self):
        if self.state == 'A':
            self.state = 'B'
            return 0
        elif self.state == 'B':
            self.state = 'C'
            return 1
        elif self.state == 'C':
            self.state = 'F'
            return 5
        elif self.state == 'D':
            self.state = 'A'
            return 7
        elif self.state == 'E':
            self.state = 'F'
            return 8
        else:
            raise KeyError


    def mask(self):
        if self.state == 'B':
            self.state = 'D'
            return 3
        elif self.state == 'C':
            self.state = 'D'
            return 4
        elif self.state == 'D':
            self.state = 'E'
            return 6
        else:
            raise KeyError


    def cue(self):
        if self.state == 'B':
            self.state = 'E'
            return 2
        else:
            raise KeyError
9Ğ’30

class Main:
    def __init__(self):
        self.state == 'A'

    def tag(self):
        if self.state == 'A':
            self.state = 'B'
            return 0
        elif self.state == 'B':
            self.state = 'C'
            return 1
        elif self.state == 'D':
            self.state = 'D'
            return 6
        elif self.state == 'E':
            self.state = 'F'
            return 7
        elif self.state == 'F':
            self.state = 'G'
            return 9
        else:
            raise KeyError


    def rush(self):
        if self.state == 'C':
            self.state = 'A'
            return 4
        elif self.state == 'E':
            self.state = 'A'
            return 8
        elif self.state == 'B':
            self.state = 'E'
            return 2
        else:
            raise KeyError


    def exit(self):
        if self.state == 'C':
            self.state = 'D'
            return 3
        elif self.state == 'D':
            self.state = 'E'
            return 5
        else:
            raise KeyError
9B40

class Main:
    def __init__(self):
        self.state = 'A'


    def group(self):
        if self.state == 'A':
            self.state = 'B'
            return 0
        elif self.state == 'B':
            self.state = 'D'
            return 3
        elif self.state == 'E':
            self.state = 'F'
            return 7
        elif self.state == 'F':
            self.state = 'F'
            return 9
        else:
            raise KeyError


    def jump(self):
        if self.state == 'A':
            self.state = 'B'
            return 1
        elif self.state == 'D':
            self.state = 'E'
            return 6
        elif self.state == 'F':
            self.state = 'G'
            return 8
        elif self.state == 'B':
            self.state = 'C'
            return 2
        elif self.state == 'C':
            self.state = 'D'
            return 4
        else:
            return KeyError


    def mix(self):
        if self.state == 'C':
            self.state = 'F'
            return 5
        else:
            raise KeyError

7B33

def main(x):
    mask_a = 0b111111
    mask_b = 0b1111 << 6
    mask_c = 0b111111111 << 10
    mask_d = 0b111111111 << 19
    mask_e = 0b11 << 28
    mask_f = 0b11 << 30

    a = x & mask_a
    b = (x & mask_b) >> 6
    c = (x & mask_c) >> 10
    d = (x & mask_d) >> 19
    e = (x & mask_e) >> 28
    f = (x & mask_f) >> 30

    return e | (f << 2) | (a << 4) | (b << 10) | (c << 14) | (d << 23)

7B36

def main(x):
    mask_a = 0b11
    mask_b = 0b1111111111111111 << 2
    mask_c = 0b1111111 << 18
    mask_d = 0b1111 << 25
    mask_e = 0b11 << 29
    mask_f = 0b1 << 31

    a = x & mask_a
    b = (x & mask_b) >> 2
    c = (x & mask_c) >> 18
    d = (x & mask_d) >> 25
    e = (x & mask_e) >> 29
    f = (x & mask_f) >> 31

    return a | (c << 2) | (b << 9) | (e << 25) | (d << 27) | (f << 31)

7B1

def main(x):
    mask_a = 0b11111
    mask_b = 0b11 << 5
    mask_c = 0b1111 << 7
    mask_d = 0b1111 << 11
    mask_e = 0b111111 << 15
    mask_f = 0b1 << 21
    mask_g = 0b11 << 22
    mask_h = 0b11111111 << 24

    a = x & mask_a
    b = (x & mask_b) >> 5
    c = (x & mask_c) >> 7
    d = (x & mask_d) >> 11
    e = (x & mask_e) >> 15
    f = (x & mask_f) >> 21
    g = (x & mask_g) >> 22
    h = (x & mask_h) >> 24

    return d | (f << 4) | (h << 5) | (b << 13) | \
           (e << 15) | (g << 21) | (a << 23) | (c << 28)

6B33

def main(x):
    match x[2]:
        case 1979:
            match x[1]:
                case 1988:
                    match x[3]:
                        case 'GN':
                            match x[4]:
                                case 1997:
                                    return 0
                                case 2011:
                                    return 1
                                case 1975:
                                    return 2
                        case 'BLADE':
                            match x[4]:
                                case 1997:
                                    return 3
                                case 2011:
                                    return 4
                                case 1975:
                                    return 5
                        case 'COQ':
                            return 6
                case 1990:
                    match x[0]:
                        case 2001:
                            match x[4]:
                                case 1997:
                                    return 7
                                case 2011:
                                    return 8
                                case 1975:
                                    return 9
                        case 1982:
                            return 10
        case 1993:
            return 11
        case 1971:
            return 12

6B36

def main(x):
    match x[2]:
        case 1999:
            match x[1]:
                case 1996:
                    match x[3]:
                        case 1970:
                            return 0
                        case 1999:
                            return 1
                        case 1985:
                            return 2
                case 2010:
                    match x[0]:
                        case 1982:
                            return 3
                        case 1958:
                            return 4
                case 1958:
                    match x[3]:
                        case 1970:
                            return 5
                        case 1999:
                            return 6
                        case 1985:
                            return 7
        case 1988:
            return 8
        case 1980:
            return 9

3B33
import math


def main(a, z, b, n, m, x):
    left, right = 0, 0

    for i in range (1, a + 1):
        left += (z ** 3 / 86 + i ** 2 / 65 + 5) ** 3 +math.log10(i ** 2 + i) ** 6

    for c in range (1, m+1):
        for i in range (1, n+1):
            for j in range (1, b+1):
                right += 63 * j ** 7 + (i ** 2 - x ** 3 - 3 * c) ** 5

    return left - right

print(main(2, 0.42, 3, 7, 5, 0.57))

3B34

import math

def main(a, b, m, y):
    res = 0
    for k in range(1, m + 1):
        for i in range(1, b + 1):
            for c in range (1, a + 1):
                res += i ** 2 + c ** 3 + 88 * math.log2(1 + y + 51 * k ** 3)

    return res

3B35

import math

def main(m, b, y, n, a):
    left, right = 1, 0

    for k in range(1, b + 1):
        sm = 0
        for i in range(1, m + 1):
            sm += (y / 85 + (k ** 2 - 95 * i -1) ** 3 + 71)
        left *= sm
    for j in range (1, m + 1):
        for k in range (1, a + 1):
            for c in range (1, n + 1):
                right += (((89 * k) ** 4) / 21 - 54 * math.cos(c ** 3) - (j ** 21) / 60)

    return left - right
print(main(6, 2, -0.76, 5, 5))

4B33

import math


def main(n):
    if n == 0:
        return -0.43
    if n == 1:
        return 0.99
    else:
        return main(n - 1) ** 3 - math.exp(main(n - 2) - 1 - 30 *
main(n - 1) ** 3) ** 2 - 0.01

print(main(5))

4B34

import math


def main(n):
    if n == 0:
        return 0.49
    if n == 1:
        return - 0.68
    else:
        return main(n - 2) + (math.sin(main(n - 1)) ** 3) / 55


4B38

import math


def main(n):
    if n == 0:
        return 0.01
    else:
        return (math.cos(main(n - 1) ** 3) ** 2) / 60 + 69 * main(n - 1) ** 3


print(main(1))


4B17

import math


def main(n):
    if n == 0:
        return - 0.19
    if n == 1:
        return 0.9
    else:
        return math.atan(main(n - 2)) ** 2 + (math.sqrt(main(n - 1))) ** 3

print(main(2))

4B16

import math


def main(n):
    if n == 0:
        return 0.5
    else:
        return math.log2(3 * main(n - 1)
                                    ** 3) ** 2 - 1 - math.ceil(main(n - 1))

5B33

import math


def main(x):
    n = len(x)
    sm = 0

    for i in range(1, n + 1):
        sm += (x[n - math.ceil(i / 4)] ** 3 / 20) ** 6

    return 88 * sm

print(main([-0.15, 0.21]))

5B34

import math


def main(z, y, x):
    n = len(x)
    sm = 0

    for i in range(1, n + 1):
        sm += 55 * ((88 * z[n - i] - 10 * x[math.ceil(i / 2)] ** 3 - (y[n - i] ** 2) / 37)) ** 3

    return sm * 50


print(main([-0.72, 0.2, -0.92, -0.72, 0.61, -0.73, 0.53, 0.23],
[-0.42, -0.76, 0.22, -0.04, -0.22, 0.55, 0.67, 0.03],
[-0.97, 0.45, -0.85, -0.79, -0.81, 0.02, 0.25, -0.16]))


5B39

import math


def main(x):
    n = len(x)
    sm = 0

    for i in range(1, n + 1):
        sm += (68 * math.log10(37 * x[math.ceil(i / 3)] ** 2 + 82) ** 4)

    return sm * 54

print(main([-0.82, 0.59, 0.83, -0.39, 0.98, 0.48]))

5B




2B33


import math


def main(x):
    if x < 61:
        return 74 + 36 * (37 * x + 0.01 + (x ** 2) / 74) ** 2
    if 61 <= x < 105:
        return 24 * (x + 1 + 66 * x ** 2) ** 3
                                        + 68 * math.log2(x + x ** 2 + 34) ** 7
    if x >= 105:
        return x + 0.06

print(main(135))

2B35

import math


def main(x):
    if x < 139:
        return 27 * (28 * x ** 2) ** 2
    if 139 <= x < 177:
        return 1 - (93 * x ** 2) ** 2 - 94 * (1 + 51 * x + x ** 2) ** 5
    if 177 <= x < 230:
        return x ** 7 + 2 * (math.floor(x)) ** 4
    if 230 <= x < 293:
        return 39 * (((x ** 2) / 98) - 87) + 75 * x ** 7
    if x >= 293:
        return 14 * (98 * x ** 2 + x + 39 * x ** 3) - 
((x + 1) ** 6) / 8 - 40 * x ** 4


print(main(167))

2B17

import math


def main(z):
    if z < 22:
        return 73 * math.tan(z)
    if 22 <= z < 71:
        return (z ** 5) / 84 - (z ** 2 - 12 * z)
    if z >= 71:
        return z ** 7 + ((math.floor(z)) ** 2) / 45


print(main(62))

1B33

import math


def main(x):
    a = (63 * x ** 5 + math.exp(1 + 99 * x) 
** 3) / (31 * (x ** 2 + x + x ** 3))
    b = math.sqrt(math.acos(x ** 2 - x ** 3) ** 4)
    return a - b
print(main( - 0.63))

1B36

import math


def main(z):
    a = math.sqrt(((abs(1 + z ** 3 + 11 * z)) ** 3 
        + (math.ceil(9 - 85 * z ** 3 - 42 * z ** 2)) ** 4) / (10 * z))
    b = (z ** 3) / 6
    c = 62 * ((z ** 2 / 6) + z) ** 4
    return a + b + c


print(main(0.73))

5B37

import math


def main(y, x):
    n = len(y)
    sm = 0

    for i in range(1, n + 1):
        sm += (1 + (y[n - i] ** 3) + 42 * x[i - 1] ** 2) ** 2

    return 87 * sm

print(main([0.07, -0.56, 0.14, -0.42, 0.43, 0.53, 0.79, 0.88],
[0.32, 0.38, -0.68, -0.7, 0.89, -0.01, 0.21, -0.03]))


5B39

import math


def main(x):
    n = len(x)
    sm = 0
    for i in range(1, n + 1):
        sm += 68 * math.log10(37 * (x[math.ceil((i / 3) - 1)]) ** 2 + 82) ** 4

    return 54 * sm


5B34

import math


def main(z, y, x):
    n = len(z)
    sm = 0

    for i in range(1, n + 1):
        sm += 55 * (88 * z[n - i] - 10 *
 x[math.ceil(i / 2) - 1] ** 3 - (y[n -i] ** 2) / 37) ** 3
    return sm * 50

print(main([0.86, -0.75, -0.59, 0.29, 0.93, -0.63, 0.18, -0.59],
[-0.57, -0.89, 0.89, -0.67, -0.66, 0.89, 0.89, -0.26],
[-0.62, -0.54, 0.05, 0.75, -0.44, -0.49, -0.41, -0.8]))


8B33


def main(s: str) -> dict:
    res = dict()

    begin = s.find('(')

    while begin != -1:
        end = s[begin + 1:].find(')') + begin
        word = s[begin + 1:end + 1].split(';')

        for i in range(len(word)):
            word[i] = word[i].strip().replace('`', '')

        begin = s.find('=:') + 1
        end = s[begin + 1:].find('.') + begin
        num = s[begin + 1: end + 1].strip()

        res[num] = word
        s = s[end + 1:]
        begin = s.find('(')
    return res


s = """do<sect> new#( `onan_653 ;`edle_964)=: rare.</sect>, <sect> new
#(`maat; `ordi_429) =:biza_415. </sect>, <sect> new #(`aned ;
`arma_795 ;`quoror ; `dilela_485 ) =: beines. </sect>, <sect> new
#(`onatma ; `xedi_138 ; `tianat) =: isus_130.</sect>,od"""

print(main(s))


8B32
def main(s : str) -> dict:
    res = dict()
    begin = s.find('opt') + 2

    while begin != -1 + 2:
        end = s[begin + 1:].find('is') + begin
        word = s[begin + 1:end + 1].strip()

        begin = s.find('"')
        end = s[begin+1:].find('"') + begin
        num = s[begin + 1: end + 1].replace('"', '')

        res[word] = num
        s = s[end + 2:]
        begin = s.find('opt') + 2

    return res

s = """| do opt quties_627 is "rean";od; do opt maen_214 is "asodibe_576";
od; do opt arso_802 is "maribi"; od; |"""

print(main(s))



1B20

import math


def main(x, y):
    left = y ** 4 - math.log(x) ** 5
    right = math.sqrt((40 * (41 - x) ** 6 - 58 * (67 * x ** 3 - y ** 2) ** 7) / (25 * math.cos(x ** 3 - y ** 2 / 40)))

    return left - right


print(main(0.3, 0.11))




3B37

import math


def main(a, m, p, b):
    left, right = 0, 0

    for i in range(1, m + 1):
        sm = 1
        for c in range(1, a + 1):
            sm *= 29 * i - 2 * math.atan(31 * p ** 3 + 72 * c) ** 4
            left += sm

    for k in range(1, b + 1):
        for i in range(1, a + 1):
            right += 17 * (i ** 2 + 10 + 83 * k) ** 2 - k ** 3

    return left - right
print(main(3, 7, -0.76, 8))


